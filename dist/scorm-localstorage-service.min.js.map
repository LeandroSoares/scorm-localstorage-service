{"version":3,"sources":["consts.js","LocstorService.js","PersistanceFake.js","PersistanceService.js","ScormService.js"],"names":["QUIZES","STATUS","PASSED","COMPLETED","FAILED","INCOMPLETE","BROWSED","NOT_ATTEMPTED","SCORM_API","SUSPEND_DATA","LESSON_STATUS","LESSON_LOCATION","SCORE","LocstorService","_classCallCheck","this","name","key","localStorage","getItem","value","setItem","JSON","parse","get","set","stringify","console","log","PersistanceFake","db","concat","objects","getObject","setObject","quizes","loadObject","saveObject","setLessonStatus","status","PersistanceService","scorm","locstor","persistance","ready","pipwerks","debug","isActive","ScormAPIService","init","save","quit","SCORM","suspend_data","response"],"mappings":"aAAA,IAAMA,OAAS,SACTC,OAAS,CACXC,OAAQ,SACRC,UAAW,YACXC,OAAQ,SACRC,WAAY,aACZC,QAAS,UACTC,cAAe,iBAGbC,UAAY,CACdC,aAAc,mBACdC,cAAe,yBACfC,gBAAiB,2BACjBC,MAAO,gaCdLC,0BACF,SAAAA,IAAcC,gBAAAC,KAAAF,GACVE,KAAKC,KAAO,mEAIZ,OAAO,8BAGPC,GACA,OAAOC,aAAaC,QAAQF,+BAG5BA,EAAKG,GAEL,OADAF,aAAaG,QAAQJ,EAAKG,IACnB,oCAEDH,GACN,OAAOK,KAAKC,MAAMR,KAAKS,IAAIP,sCAErBA,EAAKG,GAEX,OADAL,KAAKU,IAAIR,EAAKK,KAAKI,UAAUN,KACtB,iCAIP,OADAO,QAAQC,IAAI,sBACL,iCAGPD,QAAQC,IAAI,waC7BdC,2BAIL,SAAAA,IAAcf,gBAAAC,KAAAc,GACbd,KAAKC,KAAO,kBACZD,KAAKe,GAAK,GACVH,QAAQC,IAAR,qBAAAG,OAAiChB,KAAKC,KAAtC,OAAiD,6FALjD,OAAO,IAAIa,mDASX,OAAO,8BAGJZ,GACH,OAAOF,KAAKe,GAAGb,+BAGZA,EAAKG,GACRL,KAAKe,GAAGb,GAAOG,EACfO,QAAQC,IAAI,qBAAsBX,EAAKG,kCAIvC,OAAO,iCAKP,OADAO,QAAQC,IAAI,4BACL,oCAGEX,GACT,OAAOF,KAAKS,IAAIP,qCAGPA,EAAKG,GACdL,KAAKU,IAAIR,EAAKG,sCAGJH,EAAKG,GACf,IAAIY,EAAUjB,KAAKkB,UAAUzB,UAAUC,eAAiB,GACxDuB,EAAQf,GAAOG,EACfL,KAAKmB,UAAU1B,UAAUC,aAAcuB,sCAG7Bf,GAEV,OADcF,KAAKkB,UAAUzB,UAAUC,eAAiB,IACzCQ,oCAGPA,EAAKG,GACb,IAAIe,EAASpB,KAAKqB,WAAWpC,SAAW,GACxCmC,EAAOlB,GAAOG,EACdL,KAAKsB,WAAWrC,OAAQmC,oCAGhBlB,GAER,OADaF,KAAKqB,WAAWpC,SAAW,IAC1BiB,+CAId,OAAOF,KAAKqB,WAAWpC,+CAIvBe,KAAKuB,gBAAgBrC,OAAOE,mDAGboC,GACfxB,KAAKU,IAAIjB,UAAUE,cAAe6B,sZCvE9BC,8BAKL,SAAAA,EAAYC,EAAOC,GAAS5B,gBAAAC,KAAAyB,GAC3BzB,KAAK0B,MAAQA,EACb1B,KAAK2B,QAAUA,EACf3B,KAAK4B,YAAc5B,KAAK0B,MAAMG,MAAQ7B,KAAK0B,MAAQ1B,KAAK2B,mEALxD,OADAG,SAASC,MAAMC,UAAW,EACnB,IAAIP,EAAmB,IAAIQ,gBAAmB,IAAInC,iEAUzD,OAAOE,KAAK4B,YAAYM,mCAGrBhC,GACH,OAAOF,KAAK4B,YAAYnB,IAAIP,+BAGzBA,EAAKG,GACR,OAAOL,KAAK4B,YAAYlB,IAAIR,EAAKG,kCAIjC,OAAOL,KAAK4B,YAAYO,sCAIxBnC,KAAK4B,YAAYQ,yCAGRlC,GACT,OAAOF,KAAK4B,YAAYV,UAAUhB,qCAGzBA,EAAKG,GACd,OAAOL,KAAK4B,YAAYT,UAAUjB,EAAKG,sCAG7BH,EAAKG,GACf,IAAIY,EAAUjB,KAAK4B,YAAYV,UAAUzB,UAAUC,eAAiB,GACpEuB,EAAQf,GAAOG,EACfL,KAAK4B,YAAYT,UAAU1B,UAAUC,aAAcuB,sCAGzCf,GAEV,OADcF,KAAK4B,YAAYV,UAAUzB,UAAUC,eAAiB,IACrDQ,oCAGPA,EAAKG,GACb,IAAIe,EAASpB,KAAKqB,WAAWpC,SAAW,GACxCmC,EAAOlB,GAAOG,EACdL,KAAKsB,WAAWrC,OAAQmC,oCAGhBlB,GAER,OADaF,KAAKqB,WAAWpC,SAAW,IAC1BiB,+CAId,OAAOF,KAAKqB,WAAWpC,+CAIvBe,KAAKuB,gBAAgBrC,OAAOE,mDAGboC,GACfxB,KAAKU,IAAIjB,UAAUE,cAAe6B,sZCvE9BS,2BACF,SAAAA,IAAclC,gBAAAC,KAAAiC,GACVjC,KAAKC,KAAO,QACZD,KAAK0B,MAAQI,SAASO,MACtBrC,KAAK6B,MAAQ7B,KAAKkC,6DAGbhC,EAAKG,GACVL,KAAKsC,aAAapC,GAAOG,EACzBL,KAAKU,IAAIjB,UAAUC,aAAca,KAAKI,UAAUX,KAAKsC,+CAGjDpC,GACJ,OAAOF,KAAKsC,aAAapC,kCAIzB,OAAOF,KAAK0B,MAAMQ,mCAGlBhC,GACA,OAAOF,KAAK0B,MAAMjB,IAAIP,+BAGtBA,EAAKG,GACL,IAAIkC,EAAWvC,KAAK0B,MAAMhB,IAAIR,EAAKG,GAEnC,OADAL,KAAK0B,MAAMS,OACJI,oCAGDrC,GACN,OAAOK,KAAKC,MAAMR,KAAKS,IAAIP,IAAQ,wCAG7BA,EAAKG,GACX,OAAOL,KAAKU,IAAIR,EAAKK,KAAKI,UAAUN,mCAIpC,OAAOL,KAAK0B,MAAMS,sCAIlBnC,KAAK0B,MAAMU","file":"scorm-localstorage-service.min.js","sourcesContent":["const QUIZES = \"quizes\";\r\nconst STATUS = {\r\n    PASSED: \"passed\",\r\n    COMPLETED: \"completed\",\r\n    FAILED: \"failed\",\r\n    INCOMPLETE: \"incomplete\",\r\n    BROWSED: \"browsed\",\r\n    NOT_ATTEMPTED: \"not attempted\"\r\n};\r\n\r\nconst SCORM_API = {\r\n    SUSPEND_DATA: \"cmi.suspend_data\",\r\n    LESSON_STATUS: \"cmi.core.lesson_status\",\r\n    LESSON_LOCATION: \"cmi.core.lesson_location\",\r\n    SCORE: \"cmi.core.score.raw\"\r\n};\r\n","class LocstorService {\r\n    constructor() {\r\n        this.name = 'localStorage';\r\n    }\r\n\r\n    init() {\r\n        return true;\r\n    }\r\n\r\n    get(key) {\r\n        return localStorage.getItem(key);\r\n    }\r\n\r\n    set(key, value) {\r\n        localStorage.setItem(key, value);\r\n        return true;\r\n    }\r\n    getObject(key) {\r\n        return JSON.parse(this.get(key));\r\n    }\r\n    setObject(key, value) {\r\n        this.set(key, JSON.stringify(value));\r\n        return true;\r\n    }\r\n    save() {\r\n        console.log('trying to save...');\r\n        return true;\r\n    }\r\n    quit() {\r\n        console.log('trying to quit...');\r\n    }\r\n}","class PersistanceFake {\r\n\tstatic Create() {\r\n\t\treturn new PersistanceFake();\r\n\t}\r\n\tconstructor() {\r\n\t\tthis.name = \"PersistanceFake\";\r\n\t\tthis.db = {};\r\n\t\tconsole.log(`%c* Persistance - ${this.name} * `, \"font-weight:bold; color:purple\");\r\n\t}\r\n\r\n\tinit() {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tget(key) {\r\n\t\treturn this.db[key];\r\n\t}\r\n\r\n\tset(key, value) {\r\n\t\tthis.db[key] = value;\r\n\t\tconsole.log(\"PersistanceFake >>\", key, value);\r\n\t}\r\n\r\n\tsave() {\r\n\t\treturn true;\r\n\t}\r\n\r\n\tquit() {\r\n\t\tconsole.log(\"PersistanceFake >> quit\");\r\n\t\treturn true;\r\n\t}\r\n\r\n\tgetObject(key) {\r\n\t\treturn this.get(key);\r\n\t}\r\n\r\n\tsetObject(key, value) {\r\n\t\tthis.set(key, value);\r\n\t}\r\n\r\n\tsaveObject(key, value) {\r\n\t\tlet objects = this.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n\t\tobjects[key] = value;\r\n\t\tthis.setObject(SCORM_API.SUSPEND_DATA, objects);\r\n\t}\r\n\r\n\tloadObject(key) {\r\n\t\tlet objects = this.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n\t\treturn objects[key];\r\n\t}\r\n\r\n\tsaveQuiz(key, value) {\r\n\t\tlet quizes = this.loadObject(QUIZES) || {};\r\n\t\tquizes[key] = value;\r\n\t\tthis.saveObject(QUIZES, quizes);\r\n\t}\r\n\r\n\tloadQuiz(key) {\r\n\t\tlet quizes = this.loadObject(QUIZES) || {};\r\n\t\treturn quizes[key];\r\n\t}\r\n\r\n\tgetQuizCollection() {\r\n\t\treturn this.loadObject(QUIZES);\r\n\t}\r\n\r\n\tsetCompleted() {\r\n\t\tthis.setLessonStatus(STATUS.COMPLETED);\r\n\t}\r\n\r\n\tsetLessonStatus(status) {\r\n\t\tthis.set(SCORM_API.LESSON_STATUS, status);\r\n\t}\r\n}","class PersistanceService {\r\n\tstatic Create() {\r\n\t\tpipwerks.debug.isActive = false;\r\n\t\treturn new PersistanceService(new ScormAPIService(), new LocstorService());\r\n\t}\r\n\tconstructor(scorm, locstor) {\r\n\t\tthis.scorm = scorm;\r\n\t\tthis.locstor = locstor;\r\n\t\tthis.persistance = this.scorm.ready ? this.scorm : this.locstor;\r\n\t\t// console.log(`%c* Persistance - ${this.persistance.name} * `, \"font-weight:bold; color:purple\");\r\n\t}\r\n\t// inicializa scorm\r\n\tinit() {\r\n\t\treturn this.persistance.init();\r\n\t}\r\n\t// retorna dados direto do scorm\r\n\tget(key) {\r\n\t\treturn this.persistance.get(key);\r\n\t}\r\n\t// salva dados direto no scorm\r\n\tset(key, value) {\r\n\t\treturn this.persistance.set(key, value);\r\n\t}\r\n\t// commit do scorm\r\n\tsave() {\r\n\t\treturn this.persistance.save();\r\n\t}\r\n\t//scorm quit\r\n\tquit() {\r\n\t\tthis.persistance.quit();\r\n\t}\r\n\t// retorna dados do scorm passados pelo JSON.parse\r\n\tgetObject(key) {\r\n\t\treturn this.persistance.getObject(key);\r\n\t}\r\n\t// salva dados no scorm passados pelo JSON.stringify\r\n\tsetObject(key, value) {\r\n\t\treturn this.persistance.setObject(key, value);\r\n\t}\r\n\r\n\tsaveObject(key, value) {\r\n\t\tlet objects = this.persistance.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n\t\tobjects[key] = value;\r\n\t\tthis.persistance.setObject(SCORM_API.SUSPEND_DATA, objects);\r\n\t}\r\n\r\n\tloadObject(key) {\r\n\t\tlet objects = this.persistance.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n\t\treturn objects[key];\r\n\t}\r\n\r\n\tsaveQuiz(key, value) {\r\n\t\tlet quizes = this.loadObject(QUIZES) || {};\r\n\t\tquizes[key] = value;\r\n\t\tthis.saveObject(QUIZES, quizes);\r\n\t}\r\n\r\n\tloadQuiz(key) {\r\n\t\tlet quizes = this.loadObject(QUIZES) || {};\r\n\t\treturn quizes[key];\r\n\t}\r\n\r\n\tgetQuizCollection() {\r\n\t\treturn this.loadObject(QUIZES);\r\n\t}\r\n\r\n\tsetCompleted() {\r\n\t\tthis.setLessonStatus(STATUS.COMPLETED);\r\n\t}\r\n\r\n\tsetLessonStatus(status) {\r\n\t\tthis.set(SCORM_API.LESSON_STATUS, status);\r\n\t}\r\n}","class ScormAPIService {\r\n    constructor() {\r\n        this.name = 'scorm';\r\n        this.scorm = pipwerks.SCORM;\r\n        this.ready = this.init();\r\n    }\r\n\r\n    saveData(key, value) {\r\n        this.suspend_data[key] = value;\r\n        this.set(SCORM_API.SUSPEND_DATA, JSON.stringify(this.suspend_data));\r\n    }\r\n\r\n    getData(key) {\r\n        return this.suspend_data[key];\r\n    }\r\n\r\n    init() {\r\n        return this.scorm.init();\r\n    }\r\n\r\n    get(key) {\r\n        return this.scorm.get(key);\r\n    }\r\n\r\n    set(key, value) {\r\n        let response = this.scorm.set(key, value);\r\n        this.scorm.save();\r\n        return response;\r\n    }\r\n\r\n    getObject(key) {\r\n        return JSON.parse(this.get(key) || \"{}\");\r\n    }\r\n\r\n    setObject(key, value) {\r\n        return this.set(key, JSON.stringify(value));\r\n    }\r\n    \r\n    save() {\r\n        return this.scorm.save();\r\n    }\r\n\r\n    quit() {\r\n        this.scorm.quit();\r\n    }\r\n}"]}