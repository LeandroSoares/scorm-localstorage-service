{"version":3,"sources":["LocstorService.js","PersistanceFake.js","PersistanceService.js","ScormService.js"],"names":["SUSPEND_DATA","LocstorService","_classCallCheck","this","name","key","localStorage","getItem","value","setItem","JSON","parse","get","set","stringify","console","log","QUIZES","PersistanceFake","db","concat","persistance","objects","getObject","SCORM_API","setObject","quizes","loadObject","saveObject","setLessonStatus","STATUS","COMPLETED","status","LESSON_STATUS","PersistanceService","scorm","locstor","ready","init","save","quit","PASSED","FAILED","INCOMPLETE","BROWSED","NOT_ATTEMPTED","LESSON_LOCATION","SCORE","ScormAPIService","pipwerks","SCORM","suspend_data","response"],"mappings":"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","file":"scorm-localstorage-service.min.js","sourcesContent":["const SUSPEND_DATA = \"suspend_data\";\r\n\r\nclass LocstorService {\r\n    constructor() {this.name = 'localStorage'; }\r\n\r\n    init() {\r\n        return true;\r\n    }\r\n\r\n    get(key) {\r\n        return localStorage.getItem(key);\r\n    }\r\n\r\n    set(key, value) {\r\n        localStorage.setItem(key, value);\r\n        return true;\r\n    }\r\n    getObject(key) {\r\n        return JSON.parse(this.get(key));\r\n    }\r\n    setObject(key, value) {\r\n        this.set(key, JSON.stringify(value));\r\n        return true;\r\n    }\r\n    save() {\r\n        console.log('trying to save...');\r\n        return true;\r\n    }\r\n    quit() { }\r\n}\r\n","// variaveis reservadas que usamos no suspend_data\r\nconst QUIZES = \"quizes\";\r\n\r\nclass PersistanceFake {\r\n    constructor() {\r\n        this.name = \"PersistanceFake\";\r\n        this.db = {};\r\n        console.log(`%c* Persistance - ${this.persistance.name} * `, \"font-weight:bold; color:purple\");\r\n    }\r\n\r\n    init() {\r\n        return true;\r\n    }\r\n\r\n    get(key) {\r\n        return this.db[key];\r\n    }\r\n\r\n    set(key, value) {\r\n        this.db[key] = value;\r\n        console.log(\"PersistanceFake >>\", key, value);\r\n    }\r\n\r\n    save() {\r\n        return true;\r\n    }\r\n    \r\n    quit() {\r\n        console.log(\"PersistanceFake >> quit\");\r\n        return true;\r\n    }\r\n\r\n    getObject(key) {\r\n        return this.get(key);\r\n    }\r\n\r\n    setObject(key, value) {\r\n        this.set(key, value);\r\n    }\r\n\r\n    saveObject(key, value) {\r\n        let objects = this.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n        objects[key] = value;\r\n        this.setObject(SCORM_API.SUSPEND_DATA, objects);\r\n    }\r\n\r\n    loadObject(key) {\r\n        let objects = this.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n        return objects[key];\r\n    }\r\n\r\n    saveQuiz(key, value) {\r\n        let quizes = this.loadObject(QUIZES) || {};\r\n        quizes[key] = value;\r\n        this.saveObject(QUIZES, quizes);\r\n    }\r\n\r\n    loadQuiz(key) {\r\n        let quizes = this.loadObject(QUIZES) || {};\r\n        return quizes[key];\r\n    }\r\n\r\n    getQuizCollection() {\r\n        return this.loadObject(QUIZES);\r\n    }\r\n\r\n    setCompleted() {\r\n        this.setLessonStatus(STATUS.COMPLETED);\r\n    }\r\n\r\n    setLessonStatus(status) {\r\n        this.set(SCORM_API.LESSON_STATUS, status);\r\n    }\r\n}","// variaveis reservadas que usamos no suspend_data\r\nconst QUIZES = \"quizes\";\r\nclass PersistanceService {\r\n    constructor(scorm, locstor) {\r\n        this.scorm = scorm;\r\n        this.locstor = locstor;\r\n        this.persistance = this.scorm.ready ? this.scorm : this.locstor;\r\n        console.log(`%c* Persistance - ${this.persistance.name} * `, \"font-weight:bold; color:purple\");\r\n    }\r\n    // inicializa scorm\r\n    init() {\r\n        return this.persistance.init();\r\n    }\r\n    // retorna dados direto do scorm\r\n    get(key) {\r\n        return this.persistance.get(key);\r\n    }\r\n    // salva dados direto no scorm\r\n    set(key, value) {\r\n        return this.persistance.set(key, value);\r\n    }\r\n    // commit do scorm\r\n    save() {\r\n        return this.persistance.save();\r\n    }\r\n    //scorm quit\r\n    quit() {\r\n        this.persistance.quit();\r\n    }\r\n    // retorna dados do scorm passados pelo JSON.parse\r\n    getObject(key) {\r\n        return this.persistance.getObject(key);\r\n    }\r\n    // salva dados no scorm passados pelo JSON.stringify\r\n    setObject(key, value) {\r\n        return this.persistance.setObject(key, value);\r\n    }\r\n    \r\n    saveObject(key, value) {\r\n        let objects = this.persistance.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n        objects[key] = value;\r\n        this.persistance.setObject(SCORM_API.SUSPEND_DATA, objects);\r\n    }\r\n\r\n    loadObject(key) {\r\n        let objects = this.persistance.getObject(SCORM_API.SUSPEND_DATA) || {};\r\n        return objects[key];\r\n    }\r\n\r\n    saveQuiz(key, value) {\r\n        let quizes = this.loadObject(QUIZES) || {};\r\n        quizes[key] = value;\r\n        this.saveObject(QUIZES, quizes);\r\n    }\r\n\r\n    loadQuiz(key) {\r\n        let quizes = this.loadObject(QUIZES) || {};\r\n        return quizes[key];\r\n    }\r\n\r\n    getQuizCollection() {\r\n        return this.loadObject(QUIZES);\r\n    }\r\n\r\n    setCompleted() {\r\n        this.setLessonStatus(STATUS.COMPLETED);\r\n    }\r\n\r\n    setLessonStatus(status) {\r\n        this.set(SCORM_API.LESSON_STATUS, status);\r\n    }\r\n}","const STATUS = {\r\n    PASSED: \"passed\",\r\n    COMPLETED: \"completed\",\r\n    FAILED: \"failed\",\r\n    INCOMPLETE: \"incomplete\",\r\n    BROWSED: \"browsed\",\r\n    NOT_ATTEMPTED: \"not attempted\"\r\n};\r\n\r\nconst SCORM_API = {\r\n    SUSPEND_DATA: \"cmi.suspend_data\",\r\n    LESSON_STATUS: \"cmi.core.lesson_status\",\r\n    LESSON_LOCATION: \"cmi.core.lesson_location\",\r\n    SCORE: \"cmi.core.score.raw\"\r\n};\r\n\r\nclass ScormAPIService {\r\n    constructor() {\r\n        this.name = 'scorm';\r\n        this.scorm = pipwerks.SCORM;\r\n        this.ready = this.init();\r\n    }\r\n\r\n    saveData(key, value) {\r\n        this.suspend_data[key] = value;\r\n        this.set(SCORM_API.SUSPEND_DATA, JSON.stringify(this.suspend_data));\r\n    }\r\n\r\n    getData(key) {\r\n        return this.suspend_data[key];\r\n    }\r\n\r\n    init() {\r\n        return this.scorm.init();\r\n    }\r\n\r\n    get(key) {\r\n        return this.scorm.get(key);\r\n    }\r\n\r\n    set(key, value) {\r\n        let response = this.scorm.set(key, value);\r\n        this.scorm.save();\r\n        return response;\r\n    }\r\n    getObject(key) {\r\n        return JSON.parse(this.get(key) || \"{}\");\r\n    }\r\n    setObject(key, value) {\r\n        return this.set(key, JSON.stringify(value));\r\n    }\r\n    save() {\r\n        return this.scorm.save();\r\n    }\r\n\r\n    quit() {\r\n        this.scorm.quit();\r\n    }\r\n}"]}